{
  "version": 3,
  "sources": ["src/app/shared/components/app-header.component.ts", "src/app/shared/components/app-layout.component.ts"],
  "sourcesContent": ["import { Component, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Router, RouterModule } from '@angular/router';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { Observable, map } from 'rxjs';\n\nimport { AuthStateService } from '../../auth/services/auth-state.service';\nimport { User } from '../../auth/models/auth.models';\nimport { PublicHeaderComponent } from './public-header.component';\n\n@Component({\n  selector: 'app-header',\n  standalone: true,\n  imports: [\n    CommonModule,\n    RouterModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatIconModule,\n    MatMenuModule,\n    MatDividerModule,\n  ],\n  template: `\n    <div class=\"header-container\">\n      <mat-toolbar color=\"primary\" class=\"shadow-sm\">\n        <span class=\"header-title flex-1\">Workout-Tracker</span>\n\n        <div class=\"header-actions\">\n          <button mat-icon-button [matMenuTriggerFor]=\"userMenu\">\n            <mat-icon>account_circle</mat-icon>\n          </button>\n        </div>\n\n        <mat-menu #userMenu=\"matMenu\">\n          <div class=\"border-b px-4 py-2\">\n            <p class=\"dashboard-heading text-sm font-medium\" *ngIf=\"currentUser$ | async as user\">\n              {{ user.firstName }} {{ user.lastName }}\n            </p>\n            <p class=\"dashboard-text text-xs\" *ngIf=\"currentUser$ | async as user\">\n              {{ user.email }}\n            </p>\n          </div>\n          <button mat-menu-item (click)=\"toggleTheme()\">\n            <mat-icon>{{\n              (currentTheme$ | async) === 'dark' ? 'light_mode' : 'dark_mode'\n            }}</mat-icon>\n            <span>{{ (currentTheme$ | async) === 'dark' ? 'Light Mode' : 'Dark Mode' }}</span>\n          </button>\n          <mat-divider></mat-divider>\n          <button mat-menu-item (click)=\"logout()\">\n            <mat-icon>logout</mat-icon>\n            <span>Logout</span>\n          </button>\n        </mat-menu>\n      </mat-toolbar>\n    </div>\n  `,\n  styleUrl: './shared-header.component.scss',\n})\nexport class AppHeaderComponent extends PublicHeaderComponent {\n  private authStateService = inject(AuthStateService);\n  private router = inject(Router);\n\n  currentUser$: Observable<User | null>;\n\n  constructor() {\n    super();\n    this.currentUser$ = this.authStateService.authState$.pipe(map((authState) => authState.user));\n  }\n\n  logout(): void {\n    this.authStateService.clearAuthState();\n    this.router.navigate(['/auth/login']);\n  }\n}\n", "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterOutlet } from '@angular/router';\n\nimport { AppHeaderComponent } from './app-header.component';\n\n@Component({\n  selector: 'app-layout',\n  standalone: true,\n  imports: [CommonModule, RouterOutlet, AppHeaderComponent],\n  template: `\n    <div class=\"dashboard-background flex h-screen flex-col\">\n      <app-header></app-header>\n      <div class=\"flex-1 overflow-y-auto\">\n        <router-outlet></router-outlet>\n      </div>\n    </div>\n  `,\n  styleUrl: './shared-layout.component.scss',\n})\nexport class AppLayoutComponent {}\n"],
  "mappings": "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",
  "names": []
}
