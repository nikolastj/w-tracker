{
  "version": 3,
  "sources": ["src/app/auth/components/forgot-password.component.ts"],
  "sourcesContent": ["import { Component, OnDestroy, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormBuilder, FormGroup, Validators, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSnackBar, MatSnackBarModule } from '@angular/material/snack-bar';\nimport { Subject, takeUntil } from 'rxjs';\n\nimport { AuthApiService } from '../services/auth-api.service';\n\n@Component({\n  selector: 'app-forgot-password',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    RouterModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatIconModule,\n    MatProgressSpinnerModule,\n    MatSnackBarModule,\n  ],\n  styleUrl: '../auth.scss',\n  template: `\n    <div class=\"w-full max-w-md space-y-8\">\n      <div>\n        <h2 class=\"auth-heading mt-6 text-center text-3xl font-extrabold\">Reset your password</h2>\n        <p class=\"auth-text mt-2 text-center text-sm\">\n          Enter your email address and we'll send you a link to reset your password.\n        </p>\n      </div>\n\n      <mat-card class=\"auth-card p-6\" *ngIf=\"!emailSent\">\n        <form [formGroup]=\"forgotPasswordForm\" (ngSubmit)=\"onSubmit()\" class=\"space-y-6\">\n          <div>\n            <mat-form-field appearance=\"outline\" class=\"w-full\">\n              <mat-label>Email Address</mat-label>\n              <input\n                matInput\n                type=\"email\"\n                formControlName=\"email\"\n                placeholder=\"Enter your email address\"\n                autocomplete=\"email\"\n              />\n              <mat-icon matSuffix>email</mat-icon>\n              <mat-error *ngIf=\"forgotPasswordForm.get('email')?.hasError('required')\">\n                Email is required\n              </mat-error>\n              <mat-error *ngIf=\"forgotPasswordForm.get('email')?.hasError('email')\">\n                Please enter a valid email address\n              </mat-error>\n            </mat-form-field>\n          </div>\n\n          <div>\n            <button\n              mat-raised-button\n              color=\"primary\"\n              type=\"submit\"\n              class=\"w-full\"\n              [disabled]=\"forgotPasswordForm.invalid || isLoading\"\n            >\n              <mat-spinner *ngIf=\"isLoading\" diameter=\"20\" class=\"mr-2\"></mat-spinner>\n              Send Reset Link\n            </button>\n          </div>\n\n          <div class=\"text-center\">\n            <a routerLink=\"/auth/login\" class=\"font-medium text-indigo-600 hover:text-indigo-500\">\n              Back to sign in\n            </a>\n          </div>\n        </form>\n      </mat-card>\n\n      <!-- Success message card -->\n      <mat-card class=\"auth-card p-6 text-center\" *ngIf=\"emailSent\">\n        <div class=\"mb-4\">\n          <mat-icon class=\"text-6xl text-green-500\">check_circle</mat-icon>\n        </div>\n        <h3 class=\"auth-heading mb-2 text-lg font-medium\">Reset link sent!</h3>\n        <p class=\"auth-text mb-6 text-sm\">\n          We've sent a password reset link to <strong>{{ submittedEmail }}</strong\n          >. Please check your email and follow the instructions to reset your password.\n        </p>\n        <div class=\"space-y-3\">\n          <button\n            mat-raised-button\n            color=\"primary\"\n            (click)=\"resendEmail()\"\n            [disabled]=\"isLoading\"\n            class=\"w-full\"\n          >\n            <mat-spinner *ngIf=\"isLoading\" diameter=\"20\" class=\"mr-2\"></mat-spinner>\n            Resend Email\n          </button>\n          <div>\n            <a routerLink=\"/auth/login\" class=\"font-medium text-indigo-600 hover:text-indigo-500\">\n              Back to sign in\n            </a>\n          </div>\n        </div>\n      </mat-card>\n    </div>\n  `,\n})\nexport class ForgotPasswordComponent implements OnDestroy {\n  private fb = inject(FormBuilder);\n  private authApiService = inject(AuthApiService);\n  private snackBar = inject(MatSnackBar);\n  private destroy$ = new Subject<void>();\n\n  isLoading = false;\n  emailSent = false;\n  submittedEmail = '';\n\n  forgotPasswordForm: FormGroup = this.fb.group({\n    email: ['', [Validators.required, Validators.email]],\n  });\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  onSubmit(): void {\n    if (this.forgotPasswordForm.valid && !this.isLoading) {\n      this.submitResetRequest();\n    }\n  }\n\n  resendEmail(): void {\n    if (!this.isLoading) {\n      this.submitResetRequest();\n    }\n  }\n\n  private submitResetRequest(): void {\n    this.isLoading = true;\n    const email = this.forgotPasswordForm.get('email')?.value || this.submittedEmail;\n\n    this.authApiService\n      .requestPasswordReset(email)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: () => {\n          this.isLoading = false;\n          this.emailSent = true;\n          this.submittedEmail = email;\n        },\n        error: () => {\n          this.isLoading = false;\n        },\n      });\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
